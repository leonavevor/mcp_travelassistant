[build-system]
requires = ["setuptools>=61.0", "poetry_core>=1.0.0", "wheel", "build>=0.10.0"]
build-backend = "setuptools.build_meta"

[project]
name = "py_mcp_travelplanner"
version = "0.1.7"
description = "Minimal Azure Policy engine with file and sdk backends"
readme = { file = "README.md", content-type = "text/markdown" }
license = {text = "MIT"}
authors = [ {name = "leonard Avevor"} ]
# NOTE: consolidated py_mcp_travelplanner require Python >=3.12.1; bumping root minimum to be compatible with all py_mcp_travelplanner.
# Also add an upper bound (<4.0) so packages that don't yet support Python 4.x (for example openapi-pydantic)
# remain satisfiable by dependency resolvers.
requires-python = ">=3.12.1,<4.0"

dependencies = [
    "requests==2.32.3",
    "pytest (>=8.4.2,<9.0.0)",
    "tox==4.32.0",
    "pre-commit==3.4.0",
    "pyyaml>=6.0.1",
    "python-dotenv>=1.1.0",
]

# Optional dependencies: dev plus server extras consolidated from py_mcp_travelplanner/*/pyproject.toml
# Run "poetry install --no-root --no-interaction -E <extra>" to install with a specific extra.
# or "poetry install --no-root --no-interaction --all-extras" to install all extras.
[project.optional-dependencies]
ci_build = ["setuptools>=61.0", "poetry_core>=1.0.0", "wheel", "build>=0.10.0"]

# A combined 'py_mcp_travelplanner' extra that contains the union of all server dependencies.
# Run "poetry install --no-root --no-interaction -E servers" to install all server dependencies.
servers = [
    "fastmcp>=2.5.1",
    "mcp>=1.9.1",
    "requests==2.32.3",
    "geopy>=2.4.1",
    "nominatim>=0.1",
    "ratelimiter>=1.2.0.post0",
    "python-dotenv>=1.1.0",
    "typing-extensions>=4.13.2",
]

# Per-server extras so consumers can install only what a specific server needs.
# Run "poetry install --no-root --no-interaction -E <server>" to install a specific server's dependencies.
"event-server" = [
    "fastmcp>=2.5.1",
    "mcp>=1.9.1",
    "requests==2.32.3",
]

"finance-server" = [
    "fastmcp>=2.5.1",
    "mcp>=1.9.1",
    "requests==2.32.3",
]

"flight-server" = [
    "fastmcp>=2.5.1",
    "mcp>=1.9.1",
    "requests==2.32.3",
]

"geocoder-server" = [
    "fastmcp>=2.5.1",
    "geopy>=2.4.1",
    "mcp>=1.9.1",
    "nominatim>=0.1",
    "ratelimiter>=1.2.0.post0",
    "requests==2.32.3",
]

"hotel-server" = [
    "fastmcp>=2.5.1",
    "mcp>=1.9.1",
    "python-dotenv>=1.1.0",
    "requests==2.32.3",
]

"weather-server" = [
    "fastmcp>=2.5.1",
    "mcp>=1.9.1",
    "requests==2.32.3",
    "typing-extensions>=4.13.2",
]

[project.urls]
Homepage = "https://py_mc_travelplanner.io/"
Source = "https://github.com/leonavevor/mcp_travelassistant.git"
Documentation = "https://github.com/leonavevor/mcp_travelassistant/blob/main/README.md"
QuickStart = "https://github.com/leonavevor/mcp_travelassistant/blob/main/QUICKSTART.md"

[project.scripts]
# Console script entry point for the consolidated py_mcp_travelplanner package.
# so after installing py_mcp_travelplanner, users can run "py_mcp_travelplanner_cli" from the command line.
py_mcp_travelplanner_cli = "py_mcp_travelplanner.cli:main"

# Tooling metadata / mapping for maintainers. This is not standard pyproject metadata but helps
# document which server extras correspond to which server folders.
[tool.server-consolidation]
# py_mcp_travelplanner listed for reference
servers = ["event-server", "finance-server", "flight-server", "geocoder-server", "hotel-server", "weather-server"]
